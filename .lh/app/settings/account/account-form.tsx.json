{
    "sourceFile": "app/settings/account/account-form.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1698795055455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1698795139397,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,10 +169,10 @@\n                       )}\n                     >\n                       {field.value\n                         ? languages.find(\n-                            (language) => language.value === field.value\n-                          )?.label\n+                          (language) => language.value === field.value\n+                        )?.label\n                         : \"Select language\"}\n                       <CaretSortIcon className=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\n                     </Button>\n                   </FormControl>\n"
                }
            ],
            "date": 1698795055455,
            "name": "Commit-0",
            "content": "\"use client\"\n\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport { CalendarIcon, CaretSortIcon, CheckIcon } from \"@radix-ui/react-icons\"\nimport { format } from \"date-fns\"\nimport { useForm } from \"react-hook-form\"\nimport * as z from \"zod\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Calendar } from \"@/components/ui/calendar\"\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n} from \"@/components/ui/command\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\"\nimport { Input } from \"@/components/ui/input\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\"\nimport { toast } from \"@/components/ui/use-toast\"\n\nconst languages = [\n  { label: \"English\", value: \"en\" },\n  { label: \"French\", value: \"fr\" },\n  { label: \"German\", value: \"de\" },\n  { label: \"Spanish\", value: \"es\" },\n  { label: \"Portuguese\", value: \"pt\" },\n  { label: \"Russian\", value: \"ru\" },\n  { label: \"Japanese\", value: \"ja\" },\n  { label: \"Korean\", value: \"ko\" },\n  { label: \"Chinese\", value: \"zh\" },\n] as const\n\nconst accountFormSchema = z.object({\n  name: z\n    .string()\n    .min(2, {\n      message: \"Name must be at least 2 characters.\",\n    })\n    .max(30, {\n      message: \"Name must not be longer than 30 characters.\",\n    }),\n  dob: z.date({\n    required_error: \"A date of birth is required.\",\n  }),\n  language: z.string({\n    required_error: \"Please select a language.\",\n  }),\n})\n\ntype AccountFormValues = z.infer<typeof accountFormSchema>\n\n// This can come from your database or API.\nconst defaultValues: Partial<AccountFormValues> = {\n  // name: \"Your name\",\n  // dob: new Date(\"2023-01-23\"),\n}\n\nexport function AccountForm() {\n  const form = useForm<AccountFormValues>({\n    resolver: zodResolver(accountFormSchema),\n    defaultValues,\n  })\n\n  function onSubmit(data: AccountFormValues) {\n    toast({\n      title: \"You submitted the following values:\",\n      description: (\n        <pre className=\"mt-2 w-[340px] rounded-md bg-slate-950 p-4\">\n          <code className=\"text-white\">{JSON.stringify(data, null, 2)}</code>\n        </pre>\n      ),\n    })\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n        <FormField\n          control={form.control}\n          name=\"name\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Name</FormLabel>\n              <FormControl>\n                <Input placeholder=\"Your name\" {...field} />\n              </FormControl>\n              <FormDescription>\n                This is the name that will be displayed on your profile and in\n                emails.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"dob\"\n          render={({ field }) => (\n            <FormItem className=\"flex flex-col\">\n              <FormLabel>Date of birth</FormLabel>\n              <Popover>\n                <PopoverTrigger asChild>\n                  <FormControl>\n                    <Button\n                      variant={\"outline\"}\n                      className={cn(\n                        \"w-[240px] pl-3 text-left font-normal\",\n                        !field.value && \"text-muted-foreground\"\n                      )}\n                    >\n                      {field.value ? (\n                        format(field.value, \"PPP\")\n                      ) : (\n                        <span>Pick a date</span>\n                      )}\n                      <CalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" />\n                    </Button>\n                  </FormControl>\n                </PopoverTrigger>\n                <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                  <Calendar\n                    mode=\"single\"\n                    selected={field.value}\n                    onSelect={field.onChange}\n                    disabled={(date) =>\n                      date > new Date() || date < new Date(\"1900-01-01\")\n                    }\n                    initialFocus\n                  />\n                </PopoverContent>\n              </Popover>\n              <FormDescription>\n                Your date of birth is used to calculate your age.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"language\"\n          render={({ field }) => (\n            <FormItem className=\"flex flex-col\">\n              <FormLabel>Language</FormLabel>\n              <Popover>\n                <PopoverTrigger asChild>\n                  <FormControl>\n                    <Button\n                      variant=\"outline\"\n                      role=\"combobox\"\n                      className={cn(\n                        \"w-[200px] justify-between\",\n                        !field.value && \"text-muted-foreground\"\n                      )}\n                    >\n                      {field.value\n                        ? languages.find(\n                            (language) => language.value === field.value\n                          )?.label\n                        : \"Select language\"}\n                      <CaretSortIcon className=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\n                    </Button>\n                  </FormControl>\n                </PopoverTrigger>\n                <PopoverContent className=\"w-[200px] p-0\">\n                  <Command>\n                    <CommandInput placeholder=\"Search language...\" />\n                    <CommandEmpty>No language found.</CommandEmpty>\n                    <CommandGroup>\n                      {languages.map((language) => (\n                        <CommandItem\n                          value={language.label}\n                          key={language.value}\n                          onSelect={() => {\n                            form.setValue(\"language\", language.value)\n                          }}\n                        >\n                          <CheckIcon\n                            className={cn(\n                              \"mr-2 h-4 w-4\",\n                              language.value === field.value\n                                ? \"opacity-100\"\n                                : \"opacity-0\"\n                            )}\n                          />\n                          {language.label}\n                        </CommandItem>\n                      ))}\n                    </CommandGroup>\n                  </Command>\n                </PopoverContent>\n              </Popover>\n              <FormDescription>\n                This is the language that will be used in the dashboard.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\">Update account</Button>\n      </form>\n    </Form>\n  )\n}\n"
        }
    ]
}