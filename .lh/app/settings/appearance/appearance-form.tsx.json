{
    "sourceFile": "app/settings/appearance/appearance-form.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1698795055455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1698795778173,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,8 +36,10 @@\n   theme: \"light\",\n }\n \n export function AppearanceForm() {\n+  const { setTheme } = useTheme()\n+\n   const form = useForm<AppearanceFormValues>({\n     resolver: zodResolver(appearanceFormSchema),\n     defaultValues,\n   })\n@@ -125,9 +127,9 @@\n                       Light\n                     </span>\n                   </FormLabel>\n                 </FormItem>\n-                <FormItem>\n+                <FormItem >\n                   <FormLabel className=\"[&:has([data-state=checked])>div]:border-primary\">\n                     <FormControl>\n                       <RadioGroupItem value=\"dark\" className=\"sr-only\" />\n                     </FormControl>\n"
                },
                {
                    "date": 1698795801837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,9 +128,9 @@\n                       Light\n                     </span>\n                   </FormLabel>\n                 </FormItem>\n-                <FormItem >\n+                <FormItem onClick={() => setTheme(\"dark\")}>\n                   <FormLabel className=\"[&:has([data-state=checked])>div]:border-primary\">\n                     <FormControl>\n                       <RadioGroupItem value=\"dark\" className=\"sr-only\" />\n                     </FormControl>\n"
                },
                {
                    "date": 1698795810463,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n                 onValueChange={field.onChange}\n                 defaultValue={field.value}\n                 className=\"grid max-w-md grid-cols-2 gap-8 pt-2\"\n               >\n-                <FormItem>\n+                <FormItem onClick={() => setTheme(\"dark\")}>\n                   <FormLabel className=\"[&:has([data-state=checked])>div]:border-primary\">\n                     <FormControl>\n                       <RadioGroupItem value=\"light\" className=\"sr-only\" />\n                     </FormControl>\n"
                },
                {
                    "date": 1698795820170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n                 onValueChange={field.onChange}\n                 defaultValue={field.value}\n                 className=\"grid max-w-md grid-cols-2 gap-8 pt-2\"\n               >\n-                <FormItem onClick={() => setTheme(\"dark\")}>\n+                <FormItem onClick={() => setTheme(\"light\")}>\n                   <FormLabel className=\"[&:has([data-state=checked])>div]:border-primary\">\n                     <FormControl>\n                       <RadioGroupItem value=\"light\" className=\"sr-only\" />\n                     </FormControl>\n"
                },
                {
                    "date": 1698795869059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,14 +128,14 @@\n                       Light\n                     </span>\n                   </FormLabel>\n                 </FormItem>\n-                <FormItem onClick={() => setTheme(\"dark\")}>\n+                <FormItem >\n                   <FormLabel className=\"[&:has([data-state=checked])>div]:border-primary\">\n                     <FormControl>\n                       <RadioGroupItem value=\"dark\" className=\"sr-only\" />\n                     </FormControl>\n-                    <div className=\"items-center rounded-md border-2 border-muted bg-popover p-1 hover:bg-accent hover:text-accent-foreground\">\n+                    <div onClick={() => setTheme(\"dark\")} className=\"items-center rounded-md border-2 border-muted bg-popover p-1 hover:bg-accent hover:text-accent-foreground\">\n                       <div className=\"space-y-2 rounded-sm bg-slate-950 p-2\">\n                         <div className=\"space-y-2 rounded-md bg-slate-800 p-2 shadow-sm\">\n                           <div className=\"h-2 w-[80px] rounded-lg bg-slate-400\" />\n                           <div className=\"h-2 w-[100px] rounded-lg bg-slate-400\" />\n"
                },
                {
                    "date": 1698795880999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,9 +133,9 @@\n                   <FormLabel className=\"[&:has([data-state=checked])>div]:border-primary\">\n                     <FormControl>\n                       <RadioGroupItem value=\"dark\" className=\"sr-only\" />\n                     </FormControl>\n-                    <button onClick={() => setTheme(\"dark\")} className=\"items-center rounded-md border-2 border-muted bg-popover p-1 hover:bg-accent hover:text-accent-foreground\">\n+                    <div className=\"items-center rounded-md border-2 border-muted bg-popover p-1 hover:bg-accent hover:text-accent-foreground\">\n                       <div className=\"space-y-2 rounded-sm bg-slate-950 p-2\">\n                         <div className=\"space-y-2 rounded-md bg-slate-800 p-2 shadow-sm\">\n                           <div className=\"h-2 w-[80px] rounded-lg bg-slate-400\" />\n                           <div className=\"h-2 w-[100px] rounded-lg bg-slate-400\" />\n@@ -148,9 +148,9 @@\n                           <div className=\"h-4 w-4 rounded-full bg-slate-400\" />\n                           <div className=\"h-2 w-[100px] rounded-lg bg-slate-400\" />\n                         </div>\n                       </div>\n-                    </button>\n+                    </div>\n                     <span className=\"block w-full p-2 text-center font-normal\">\n                       Dark\n                     </span>\n                   </FormLabel>\n"
                },
                {
                    "date": 1698795956071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,9 +128,9 @@\n                       Light\n                     </span>\n                   </FormLabel>\n                 </FormItem>\n-                <FormItem >\n+                <FormItem>\n                   <FormLabel className=\"[&:has([data-state=checked])>div]:border-primary\">\n                     <FormControl>\n                       <RadioGroupItem value=\"dark\" className=\"sr-only\" />\n                     </FormControl>\n"
                }
            ],
            "date": 1698795055455,
            "name": "Commit-0",
            "content": "\"use client\"\n\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport { ChevronDownIcon } from \"@radix-ui/react-icons\"\nimport { useForm } from \"react-hook-form\"\nimport * as z from \"zod\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button, buttonVariants } from \"@/components/ui/button\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\"\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\"\nimport { toast } from \"@/components/ui/use-toast\"\n\nconst appearanceFormSchema = z.object({\n  theme: z.enum([\"light\", \"dark\"], {\n    required_error: \"Please select a theme.\",\n  }),\n  font: z.enum([\"inter\", \"manrope\", \"system\"], {\n    invalid_type_error: \"Select a font\",\n    required_error: \"Please select a font.\",\n  }),\n})\n\ntype AppearanceFormValues = z.infer<typeof appearanceFormSchema>\n\n// This can come from your database or API.\nconst defaultValues: Partial<AppearanceFormValues> = {\n  theme: \"light\",\n}\n\nexport function AppearanceForm() {\n  const form = useForm<AppearanceFormValues>({\n    resolver: zodResolver(appearanceFormSchema),\n    defaultValues,\n  })\n\n  function onSubmit(data: AppearanceFormValues) {\n    toast({\n      title: \"You submitted the following values:\",\n      description: (\n        <pre className=\"mt-2 w-[340px] rounded-md bg-slate-950 p-4\">\n          <code className=\"text-white\">{JSON.stringify(data, null, 2)}</code>\n        </pre>\n      ),\n    })\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n        <FormField\n          control={form.control}\n          name=\"font\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Font</FormLabel>\n              <div className=\"relative w-max\">\n                <FormControl>\n                  <select\n                    className={cn(\n                      buttonVariants({ variant: \"outline\" }),\n                      \"w-[200px] appearance-none bg-transparent font-normal\"\n                    )}\n                    {...field}\n                  >\n                    <option value=\"inter\">Inter</option>\n                    <option value=\"manrope\">Manrope</option>\n                    <option value=\"system\">System</option>\n                  </select>\n                </FormControl>\n                <ChevronDownIcon className=\"absolute right-3 top-2.5 h-4 w-4 opacity-50\" />\n              </div>\n              <FormDescription>\n                Set the font you want to use in the dashboard.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"theme\"\n          render={({ field }) => (\n            <FormItem className=\"space-y-1\">\n              <FormLabel>Theme</FormLabel>\n              <FormDescription>\n                Select the theme for the dashboard.\n              </FormDescription>\n              <FormMessage />\n              <RadioGroup\n                onValueChange={field.onChange}\n                defaultValue={field.value}\n                className=\"grid max-w-md grid-cols-2 gap-8 pt-2\"\n              >\n                <FormItem>\n                  <FormLabel className=\"[&:has([data-state=checked])>div]:border-primary\">\n                    <FormControl>\n                      <RadioGroupItem value=\"light\" className=\"sr-only\" />\n                    </FormControl>\n                    <div className=\"items-center rounded-md border-2 border-muted p-1 hover:border-accent\">\n                      <div className=\"space-y-2 rounded-sm bg-[#ecedef] p-2\">\n                        <div className=\"space-y-2 rounded-md bg-white p-2 shadow-sm\">\n                          <div className=\"h-2 w-[80px] rounded-lg bg-[#ecedef]\" />\n                          <div className=\"h-2 w-[100px] rounded-lg bg-[#ecedef]\" />\n                        </div>\n                        <div className=\"flex items-center space-x-2 rounded-md bg-white p-2 shadow-sm\">\n                          <div className=\"h-4 w-4 rounded-full bg-[#ecedef]\" />\n                          <div className=\"h-2 w-[100px] rounded-lg bg-[#ecedef]\" />\n                        </div>\n                        <div className=\"flex items-center space-x-2 rounded-md bg-white p-2 shadow-sm\">\n                          <div className=\"h-4 w-4 rounded-full bg-[#ecedef]\" />\n                          <div className=\"h-2 w-[100px] rounded-lg bg-[#ecedef]\" />\n                        </div>\n                      </div>\n                    </div>\n                    <span className=\"block w-full p-2 text-center font-normal\">\n                      Light\n                    </span>\n                  </FormLabel>\n                </FormItem>\n                <FormItem>\n                  <FormLabel className=\"[&:has([data-state=checked])>div]:border-primary\">\n                    <FormControl>\n                      <RadioGroupItem value=\"dark\" className=\"sr-only\" />\n                    </FormControl>\n                    <div className=\"items-center rounded-md border-2 border-muted bg-popover p-1 hover:bg-accent hover:text-accent-foreground\">\n                      <div className=\"space-y-2 rounded-sm bg-slate-950 p-2\">\n                        <div className=\"space-y-2 rounded-md bg-slate-800 p-2 shadow-sm\">\n                          <div className=\"h-2 w-[80px] rounded-lg bg-slate-400\" />\n                          <div className=\"h-2 w-[100px] rounded-lg bg-slate-400\" />\n                        </div>\n                        <div className=\"flex items-center space-x-2 rounded-md bg-slate-800 p-2 shadow-sm\">\n                          <div className=\"h-4 w-4 rounded-full bg-slate-400\" />\n                          <div className=\"h-2 w-[100px] rounded-lg bg-slate-400\" />\n                        </div>\n                        <div className=\"flex items-center space-x-2 rounded-md bg-slate-800 p-2 shadow-sm\">\n                          <div className=\"h-4 w-4 rounded-full bg-slate-400\" />\n                          <div className=\"h-2 w-[100px] rounded-lg bg-slate-400\" />\n                        </div>\n                      </div>\n                    </div>\n                    <span className=\"block w-full p-2 text-center font-normal\">\n                      Dark\n                    </span>\n                  </FormLabel>\n                </FormItem>\n              </RadioGroup>\n            </FormItem>\n          )}\n        />\n\n        <Button type=\"submit\">Update preferences</Button>\n      </form>\n    </Form>\n  )\n}\n"
        }
    ]
}