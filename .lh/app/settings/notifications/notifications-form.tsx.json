{
    "sourceFile": "app/settings/notifications/notifications-form.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1698794985812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1698794991824,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n   FormLabel,\n   FormMessage,\n } from \"@/components/ui/form\"\n import { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\"\n-import { Switch } from \"@/components/ui/switch\"\n+import { Switch } from \"@/components/ui/switch\"\n import { toast } from \"@/components/ui/use-toast\"\n \n const notificationsFormSchema = z.object({\n   type: z.enum([\"all\", \"mentions\", \"none\"], {\n"
                },
                {
                    "date": 1698794999931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n   FormItem,\n   FormLabel,\n   FormMessage,\n } from \"@/components/ui/form\"\n-import { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\"\n+import { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\"\n import { Switch } from \"@/components/ui/switch\"\n import { toast } from \"@/components/ui/use-toast\"\n \n const notificationsFormSchema = z.object({\n"
                },
                {
                    "date": 1698795011386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n   FormField,\n   FormItem,\n   FormLabel,\n   FormMessage,\n-} from \"@/components/ui/form\"\n+} from \"@/components/ui/form\"\n import { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\"\n import { Switch } from \"@/components/ui/switch\"\n import { toast } from \"@/components/ui/use-toast\"\n \n"
                },
                {
                    "date": 1698795018079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { useForm } from \"react-hook-form\"\n import * as z from \"zod\"\n \n import { Button } from \"@/components/ui/button\"\n-import { Checkbox } from \"@/components/ui/checkbox\"\n+import { Checkbox } from \"@/components/ui/checkbox\"\n import {\n   Form,\n   FormControl,\n   FormDescription,\n"
                },
                {
                    "date": 1698795030018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import { zodResolver } from \"@hookform/resolvers/zod\"\n import { useForm } from \"react-hook-form\"\n import * as z from \"zod\"\n \n-import { Button } from \"@/components/ui/button\"\n+import { Button } from \"@/components/ui/button\"\n import { Checkbox } from \"@/components/ui/checkbox\"\n import {\n   Form,\n   FormControl,\n"
                },
                {
                    "date": 1698796788063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -208,9 +208,9 @@\n                   Use different settings for my mobile devices\n                 </FormLabel>\n                 <FormDescription>\n                   You can manage your mobile notifications in the{\" \"}\n-                  <Link href=\"/examples/forms\">mobile settings</Link> page.\n+                  <Link href=\"/settings\">mobile settings</Link> page.\n                 </FormDescription>\n               </div>\n             </FormItem>\n           )}\n"
                }
            ],
            "date": 1698794985812,
            "name": "Commit-0",
            "content": "\"use client\"\n\nimport Link from \"next/link\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport { useForm } from \"react-hook-form\"\nimport * as z from \"zod\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { Checkbox } from \"@/components/ui/checkbox\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\"\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\"\nimport { Switch } from \"@/components/ui/switch\"\nimport { toast } from \"@/components/ui/use-toast\"\n\nconst notificationsFormSchema = z.object({\n  type: z.enum([\"all\", \"mentions\", \"none\"], {\n    required_error: \"You need to select a notification type.\",\n  }),\n  mobile: z.boolean().default(false).optional(),\n  communication_emails: z.boolean().default(false).optional(),\n  social_emails: z.boolean().default(false).optional(),\n  marketing_emails: z.boolean().default(false).optional(),\n  security_emails: z.boolean(),\n})\n\ntype NotificationsFormValues = z.infer<typeof notificationsFormSchema>\n\n// This can come from your database or API.\nconst defaultValues: Partial<NotificationsFormValues> = {\n  communication_emails: false,\n  marketing_emails: false,\n  social_emails: true,\n  security_emails: true,\n}\n\nexport function NotificationsForm() {\n  const form = useForm<NotificationsFormValues>({\n    resolver: zodResolver(notificationsFormSchema),\n    defaultValues,\n  })\n\n  function onSubmit(data: NotificationsFormValues) {\n    toast({\n      title: \"You submitted the following values:\",\n      description: (\n        <pre className=\"mt-2 w-[340px] rounded-md bg-slate-950 p-4\">\n          <code className=\"text-white\">{JSON.stringify(data, null, 2)}</code>\n        </pre>\n      ),\n    })\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n        <FormField\n          control={form.control}\n          name=\"type\"\n          render={({ field }) => (\n            <FormItem className=\"space-y-3\">\n              <FormLabel>Notify me about...</FormLabel>\n              <FormControl>\n                <RadioGroup\n                  onValueChange={field.onChange}\n                  defaultValue={field.value}\n                  className=\"flex flex-col space-y-1\"\n                >\n                  <FormItem className=\"flex items-center space-x-3 space-y-0\">\n                    <FormControl>\n                      <RadioGroupItem value=\"all\" />\n                    </FormControl>\n                    <FormLabel className=\"font-normal\">\n                      All new messages\n                    </FormLabel>\n                  </FormItem>\n                  <FormItem className=\"flex items-center space-x-3 space-y-0\">\n                    <FormControl>\n                      <RadioGroupItem value=\"mentions\" />\n                    </FormControl>\n                    <FormLabel className=\"font-normal\">\n                      Direct messages and mentions\n                    </FormLabel>\n                  </FormItem>\n                  <FormItem className=\"flex items-center space-x-3 space-y-0\">\n                    <FormControl>\n                      <RadioGroupItem value=\"none\" />\n                    </FormControl>\n                    <FormLabel className=\"font-normal\">Nothing</FormLabel>\n                  </FormItem>\n                </RadioGroup>\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <div>\n          <h3 className=\"mb-4 text-lg font-medium\">Email Notifications</h3>\n          <div className=\"space-y-4\">\n            <FormField\n              control={form.control}\n              name=\"communication_emails\"\n              render={({ field }) => (\n                <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-4\">\n                  <div className=\"space-y-0.5\">\n                    <FormLabel className=\"text-base\">\n                      Communication emails\n                    </FormLabel>\n                    <FormDescription>\n                      Receive emails about your account activity.\n                    </FormDescription>\n                  </div>\n                  <FormControl>\n                    <Switch\n                      checked={field.value}\n                      onCheckedChange={field.onChange}\n                    />\n                  </FormControl>\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"marketing_emails\"\n              render={({ field }) => (\n                <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-4\">\n                  <div className=\"space-y-0.5\">\n                    <FormLabel className=\"text-base\">\n                      Marketing emails\n                    </FormLabel>\n                    <FormDescription>\n                      Receive emails about new products, features, and more.\n                    </FormDescription>\n                  </div>\n                  <FormControl>\n                    <Switch\n                      checked={field.value}\n                      onCheckedChange={field.onChange}\n                    />\n                  </FormControl>\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"social_emails\"\n              render={({ field }) => (\n                <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-4\">\n                  <div className=\"space-y-0.5\">\n                    <FormLabel className=\"text-base\">Social emails</FormLabel>\n                    <FormDescription>\n                      Receive emails for friend requests, follows, and more.\n                    </FormDescription>\n                  </div>\n                  <FormControl>\n                    <Switch\n                      checked={field.value}\n                      onCheckedChange={field.onChange}\n                    />\n                  </FormControl>\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"security_emails\"\n              render={({ field }) => (\n                <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-4\">\n                  <div className=\"space-y-0.5\">\n                    <FormLabel className=\"text-base\">Security emails</FormLabel>\n                    <FormDescription>\n                      Receive emails about your account activity and security.\n                    </FormDescription>\n                  </div>\n                  <FormControl>\n                    <Switch\n                      checked={field.value}\n                      onCheckedChange={field.onChange}\n                      disabled\n                      aria-readonly\n                    />\n                  </FormControl>\n                </FormItem>\n              )}\n            />\n          </div>\n        </div>\n        <FormField\n          control={form.control}\n          name=\"mobile\"\n          render={({ field }) => (\n            <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n              <FormControl>\n                <Checkbox\n                  checked={field.value}\n                  onCheckedChange={field.onChange}\n                />\n              </FormControl>\n              <div className=\"space-y-1 leading-none\">\n                <FormLabel>\n                  Use different settings for my mobile devices\n                </FormLabel>\n                <FormDescription>\n                  You can manage your mobile notifications in the{\" \"}\n                  <Link href=\"/examples/forms\">mobile settings</Link> page.\n                </FormDescription>\n              </div>\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\">Update notifications</Button>\n      </form>\n    </Form>\n  )\n}\n"
        }
    ]
}